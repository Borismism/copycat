services:
  # ==========================================================================
  # SHARED INFRASTRUCTURE - Used by all Copycat services
  # ==========================================================================

  # Firestore Emulator - Document database
  firestore:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
    command: gcloud beta emulators firestore start --host-port=0.0.0.0:8200
    ports:
      - "8200:8200"
    environment:
      - FIRESTORE_PROJECT_ID=copycat-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - copycat-network

  # PubSub Emulator - Event messaging
  pubsub:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"
    environment:
      - PUBSUB_PROJECT_ID=copycat-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - copycat-network

  # PubSub Initializer - Creates all topics and subscriptions
  pubsub-init:
    image: google/cloud-sdk:alpine
    depends_on:
      pubsub:
        condition: service_healthy
    environment:
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - PUBSUB_PROJECT_ID=copycat-local
    volumes:
      - ./scripts/init-pubsub.sh:/init-pubsub.sh
    entrypoint: ["/bin/sh", "/init-pubsub.sh"]
    networks:
      - copycat-network

  # Cloud Storage Emulator - For frame storage
  storage:
    image: fsouza/fake-gcs-server
    command: -scheme http -port 4443 -external-url http://storage:4443
    ports:
      - "4443:4443"
    volumes:
      - gcs-data:/data
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:4443/storage/v1/b"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - copycat-network

  # ==========================================================================
  # COPYCAT MICROSERVICES - Pipeline components
  # ==========================================================================

  # Discovery Service - Finds videos on YouTube (PORT 8081)
  discovery-service:
    build:
      context: ./services/discovery-service
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8080"
    environment:
      - ENVIRONMENT=local
      - GCP_PROJECT_ID=copycat-local
      - GCP_REGION=us-central1
      - FIRESTORE_EMULATOR_HOST=firestore:8200
      - FIRESTORE_DATABASE_ID=(default)
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - PUBSUB_TOPIC_DISCOVERED_VIDEOS=discovered-videos
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - PUBSUB_TIMEOUT_SECONDS=30
    depends_on:
      firestore:
        condition: service_healthy
      pubsub:
        condition: service_healthy
      pubsub-init:
        condition: service_completed_successfully
    volumes:
      - ./services/discovery-service/app:/app/app
      - ./services/discovery-service/data:/app/data
    networks:
      - copycat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # API Service - Central API gateway (PORT 8080)
  api-service:
    build:
      context: ./services/api-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GCP_PROJECT_ID=copycat-local
      - GCP_REGION=europe-west4
      - ENVIRONMENT=local
      - DISCOVERY_SERVICE_URL=http://discovery-service:8080
      - FIRESTORE_EMULATOR_HOST=firestore:8200
      - BIGQUERY_DATASET=copycat_dev
    depends_on:
      firestore:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    volumes:
      - ./services/api-service/app:/app/app
    networks:
      - copycat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Frontend Service - React SPA + FastAPI proxy (PORT 5173)
  frontend-service:
    build:
      context: ./services/frontend-service
      dockerfile: Dockerfile
    ports:
      - "5173:8080"
    environment:
      - API_SERVICE_URL=http://api-service:8080
      - ENVIRONMENT=local
    depends_on:
      api-service:
        condition: service_healthy
    volumes:
      - ./services/frontend-service/app/main.py:/app/main.py
      - ./services/frontend-service/app/web:/web
    networks:
      - copycat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Risk Scorer Service - Filters by risk level (PORT 8081)
  # Uncomment when ready to implement
  # risk-scorer-service:
  #   build:
  #     context: ./services/risk-scorer-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - ENVIRONMENT=local
  #     - GCP_PROJECT_ID=copycat-local
  #     - FIRESTORE_EMULATOR_HOST=firestore:8200
  #     - PUBSUB_EMULATOR_HOST=pubsub:8085
  #     - PUBSUB_TOPIC_RISK_SCORED=risk-scored-videos
  #   depends_on:
  #     firestore:
  #       condition: service_healthy
  #     pubsub:
  #       condition: service_healthy
  #     pubsub-init:
  #       condition: service_completed_successfully
  #   volumes:
  #     - ./services/risk-scorer-service/app:/app/app
  #   networks:
  #     - copycat-network

  # Chapter Extractor Service - Extracts video chapters (PORT 8082)
  # Uncomment when ready to implement
  # chapter-extractor-service:
  #   build:
  #     context: ./services/chapter-extractor-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     - ENVIRONMENT=local
  #     - GCP_PROJECT_ID=copycat-local
  #     - FIRESTORE_EMULATOR_HOST=firestore:8200
  #     - PUBSUB_EMULATOR_HOST=pubsub:8085
  #   depends_on:
  #     firestore:
  #       condition: service_healthy
  #     pubsub:
  #       condition: service_healthy
  #   volumes:
  #     - ./services/chapter-extractor-service/app:/app/app
  #   networks:
  #     - copycat-network

  # Frame Extractor Service - Captures video frames (PORT 8083)
  # Uncomment when ready to implement
  # frame-extractor-service:
  #   build:
  #     context: ./services/frame-extractor-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8083:8080"
  #   environment:
  #     - ENVIRONMENT=local
  #     - GCP_PROJECT_ID=copycat-local
  #     - FIRESTORE_EMULATOR_HOST=firestore:8200
  #     - PUBSUB_EMULATOR_HOST=pubsub:8085
  #     - STORAGE_EMULATOR_HOST=http://storage:4443
  #   depends_on:
  #     firestore:
  #       condition: service_healthy
  #     pubsub:
  #       condition: service_healthy
  #     storage:
  #       condition: service_healthy
  #   volumes:
  #     - ./services/frame-extractor-service/app:/app/app
  #   networks:
  #     - copycat-network

  # Vision Analyzer Service - Analyzes with Gemini (PORT 8084)
  # Uncomment when ready to implement
  # vision-analyzer-service:
  #   build:
  #     context: ./services/vision-analyzer-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8084:8080"
  #   environment:
  #     - ENVIRONMENT=local
  #     - GCP_PROJECT_ID=copycat-local
  #     - FIRESTORE_EMULATOR_HOST=firestore:8200
  #     - PUBSUB_EMULATOR_HOST=pubsub:8085
  #     - STORAGE_EMULATOR_HOST=http://storage:4443
  #   depends_on:
  #     firestore:
  #       condition: service_healthy
  #     pubsub:
  #       condition: service_healthy
  #     storage:
  #       condition: service_healthy
  #   volumes:
  #     - ./services/vision-analyzer-service/app:/app/app
  #   networks:
  #     - copycat-network

networks:
  copycat-network:
    driver: bridge

volumes:
  gcs-data:  # Persistent storage for Cloud Storage emulator
